available.packages
install.packages('slidify')
setRepositories()
utils:::menuInstallPkgs()
install.packages(c('slidify', 'ggplot2','devtools'))
q()
source('https://cran.r-project.org/src/contrib/KernSmooth_2.23-15.tar.gz')
source("http://bioconductor.or/biocLite.R")
source("http://bioconductor.org/biocLite.R")
library(Kernsmooth)
cube <- function(x,n) {
x^3
}
cube(3)
x<-1:10
x
if (x>5){
x<- 0
}
f <- function(x){
g<-fuuction(y){
f <- function(x){g<-fuuction(y){
f <- function(x){
g <-function(y){ y+z}
z<-4
x + g(x)
}
z<-10
f(3)
x <-5
y <- if (x<3){
NA
} else{
10
}
y
q()
x<-4
while (x<10){
print(x)
x<- x + 1
}
x<-4
while (x<10){
x<- x + 1
print(x)
}
x<-matrix(1:6, 2,3)
x
x<-matrix(1:9, 3,3)
x
for (i in seq_len(nroW(x)){}
for (i in seq_len(nroW(x)){}
for (i in seq_len(nroW(x))){
for (j in seq_len(ncol(x))){
print(x[i,j])
}
}
x(nrow)
x
x[1"3"]
x[1:3]
x[:3]
x[0:3]
x[1:0]
x[1:]
x[1:3]
x[1,3]
x[1:3,3]
nrow
x.nrow
x(nrow)
x[nrow]
for (i in seq_len(x)){}
for (i in seq_len(x)){
print(x[i])
}
x
for (i in 1:100){
if(i<=100){
print(i)
}
}
for (i in 1:100){
if (i<=20){}
}}
for (i in 1:100){}
for (i in 1:100){
if (i <= 20){
next
}
print (i)
}
x <- 1,2,3,4,5,6
x <- (1,2,3,4,5,6)
x <- c(1,2,3,4,5,6)
for i in x{
for (i in seg_along(x)){}
for (i in seg_along(x)){
for (i in seg_along(x)){}
}
read.csv("./specdata/001.csv")
getwd()
setwd("C:/Users/timatme/R/datasciencecoursera")
t <- read.csv("./specdata/001.csv")
t <- read.csv("./specdata/001")
t <- read.csv("./specdata/001.")
t <- read.csv("./specdata/001")
t <- read.csv("./specdata/001.csv")
f <- toString(id)
id <- 100
f
f <- toString(id)
f
d = specdata
d <- "specdata"
dir = ("./",d,"/",f,".csv", sep="")
dir<-paste("./",d,"/",f,".csv", sep="")
dir
matx <-read.csv(dir)
matx[1:6]
matx[1,6]
matx[1:10, 1:4]
matx[1:10, 2]
matx[, 2]
t = matx[, 2]
t
sulphite <-mat[,2]
sulphite <-matx[,2]
mean(sulphite, na.rm=TRUE)
r
t
pollutantmean <- function(directory, pollutant, id=1:332){
f <- toString(id)
dir<-paste("./",directory,"/",f,".csv", sep="")
matx <-read.csv(dir)
if (pollutant == "sulfate"){
r = matx[,2]
}
else if (pollutant == "nitrate"){
r = matx[,3]
}
else {
pass
}
pollutantmean <- mean(r, na.rm=TRUE)
}
y = pollutantmean(specdata, nitrate, 100)
dir
id = 100
f = toSpring(id)
f = toString(id)
directory = "specdata"
dir<-paste("./",directory,"/",f,".csv", sep="")
mat<-dir<-paste("./",directory,"/",f,".csv", sep="")
mat[1,]
mat[,2]
pollutantmean <- function(directory, pollutant, id=1:332){
f <- toString(id)
direct<-(toString(directory))
dir<-paste("./",directory,"/",f,".csv", sep="")
matx <-read.csv(dir)
if (pollutant == "sulfate"){
r <- matx[,2]
}
else if (pollutant == "nitrate"){
r <- matx[,3]
}
else {
pass
}
pollutantmean <- mean(r, na.rm=TRUE)
}
pollutantmean(specdata,nitrate,100)
getwd
getwd()
t<-("./specdata/001.csv")
pollutantmean <- function(directory, pollutant, id=1:332){
f <- toString(id)
direct<-(toString(directory))
matx <-read.csv(paste("./",directory,"/",f,".csv", sep=""))
if (pollutant == "sulfate"){
r <- matx[,2]
}
else if (pollutant == "nitrate"){
r <- matx[,3]
}
else {
pass
}
pollutantmean <- mean(r, na.rm=TRUE)
}
pollutantmean(specdata, nitrate, 100)
pollutantmean <- function(directory, pollutant, id=1:332){
f <- toString(id)
direct<-(toString(directory))
matx <-read.csv(paste("./",direct,"/",f,".csv", sep=""))
if (pollutant == "sulfate"){
r <- matx[,2]
}
else if (pollutant == "nitrate"){
r <- matx[,3]
}
else {
pass
}
pollutantmean <- mean(r, na.rm=TRUE)
}
pollutantmean(specdata, nitrate, 100)
directory<- "specdata"
f <- 200
ma <-matx <-read.csv(paste("./",directory,"/",f,".csv", sep=""))
pollutantmean <- function(directory, pollutant, id=1:332){
f <- toString(id)
matx <-read.csv(paste("./",directory,"/",f,".csv", sep=""))
if (pollutant == "sulfate"){
r <- matx[,2]
}
else if (pollutant == "nitrate"){
r <- matx[,3]
}
else {
pass
}
pollutantmean <- mean(r, na.rm=TRUE)
}
pollutantmean(specdata, nitrate, 100)
